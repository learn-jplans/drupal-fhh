/*
 *
 * FUNCTIONS
 *
 */


// Convert pixels to rem
// where $target is size in pixels
// USAGE: font-size: rem(12);
@function rem($target) {
	$max: length($target);
	$values: ();
	$context: $base-font-size;
	@for $i from 1 through $max {
		$x: (nth($target, $i) / $context) * 1rem;

		@if abs($x) == 0 {
			$values: append($values, 0);
		} @else {
			$values: append($values, $x);
		}
	}
	@return $values;
}


// Colors
// for name color, refer to settings/colors.scss -> $colors maps
// USAGE: color: color($name);
@function color($name, $tone: 'base') {
  @if map-has-key($colors, $name) {
    @return map-get(map-get($colors, $name), $tone);
  } @else {
	  @warn "Unknown '#{$name}' in $colors.";
	  @return null;
	}
}

// letter spacing
// USAGE: letter-spacing: ls($value);
@function ls($value) {
	@if $value < 0 {
		// convert negative value
		// change the unit type to em
		@return ($value * -1 / 1000) * -1em;
	} @else if $value == 0 {
		// return the value itself
		@return $value;
	} @else {
		// calculate letter spacing
		// change its unit type to em
		@return ($value / 1000) * 1em;
	}
}